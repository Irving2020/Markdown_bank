数组
    - 数组的方法：
        slice()
            - 用来截取数组
            - 参数：
                1. 截取的起始索引（包含起始位置）
                2. 截取的结束索引（不包含结束位置）
                    - 第二个参数可以省略，如果省略则会一直截取到最后
                    - 参数可以是负值，如果是负值则从后向前计算
            - 通过slice()也可以对一个数组进行浅复制（浅拷贝）

        splice()
            - 可以用来删除、添加、替换数组中的元素
            - 参数：
                1.删除的起始位置
                2.删除的数量
                3.要插入的元素
            - 返回值：
                返回被删除的元素

        concat()
            - 用来将多个数组连接为一个数组
            - 不会影响原数组，将拼接的结果保存到一个新数组中返回

        indexOf()
            - 查询元素在数组中第一次出现的位置
        lastIndexOf()
            - 查询元素在数组中最后一次出现的位置
            - 参数：
                1. 要查询的元素
                2. 查询的起始位置
            - 返回值：
                返回元素的索引，如果没有找到则返回-1

        join()
            - 将数组中的所有元素连接为一个字符串
            - 参数：
                1. 指定一个字符串作为分隔符，如果不指定则默认使用,

        reverse()
            - 将一个数组反转

        sort()
            - 对一个数组进行排序
            - 注意：默认sort()会按照元素的Unicode编码进行排序
            - 可以通过回调函数来自定义排序规则：
                - 升序排
                    function(a, b){
                        return a - b;
                    }

                - 降序排
                    function(a, b){
                        return b - a;
                    }

                - 乱序排
                    function(a, b){
                        return Math.random() - Math.random();
                    }

函数
    arguments
        - arguments是函数的隐含的参数，它是一个类数组对象
        - arguments用来存储函数的实参，通过arguments即使不设置形参也可以使用实参

    函数的方法：
        call()
        apply()
            - 两个方法都需要通过函数对象的去调用，它们可以用来指定的函数的this，
                它们的第一个参数会成为this。
            - call()的实参，从第二个参数起一个一个的列出来
            - apply()的实参，以数组的形式传递

原型（prototype）
    - 我们所定义的每一个函数都有一个属性叫做prototype，
        该属性指向一个对象，它就是所谓的原型对象
    - 如果一个函数作为普通函数调用，prototype没有任何的作用。
    - 如果一个函数作为构造函数调用，那么它所创建的所有实例中，
        都会有一个隐含的属性（-+++++++6
        ）指向其原型对象（函数的prototype属性）
    - 原型对象就是一个公共的区域，可以被类和其所有实例共同访问，
        我们可以将实例中共有的属性同一添加到原型对象中
    - 原型链
        - 当访问一个对象的属性时，浏览器会先在对象自身中寻找，
            找到了则使用，没有找到则去对象的原型中寻找
            找到了则使用，没有找到继续去原型的原型中寻找，以此类推
            直到找到了Object的原型，如果依然没有找到则返回undefined

Math
    - Math是一个工具类，其中包含数学运算相关的常量和方法
    - 常量：
        Math.PI 圆周率
    - 方法：
        Math.abs()
            - 求一个数的绝对值
        Math.ceil()
            - 对一个数进行向上取整
        Math.floor()
            - 对一个数组进行向下取整
        Math.round()
            - 四舍五入取整
        Math.random()
            - 生成一个0-1之间的随机数
        Math.min()
        Math.max()
            - 获取多个值中的较小和较大值
        Math.sqrt()
            - 求一个数的平方根
        Math.pow(x, y)
            - 求x的y次幂



