- JavaScript
    - JS是一门运行浏览器端的脚本语言。
    - 现在来讲，JS的战场已经不仅仅局限于浏览器了（Node.js）。
    - JS是一个解释型语言，动态类型语言。

- JS中的输出语句
    - 弹出一个警告框
        alert()
    - 在控制台输出一个日志
        console.log()
    - 在网页中写一个内容
        document.write()

- 编写位置：
    1.编写到script标签中
        <script>
            .....
        </script>
    2.编写到外部的js文件中
        <script src=".../xx.js"></script>
    3.编写到标签的指定属性中
        <button onclick='xxxx'>xxx</button>
        <a href="javascript:xxx;">xxx</a>

- 基本语法：
    1.单行注释
        //...
    2.多行注释
        /*...*/
    3.JS中严格区分大小写
    4.JS会忽略多个空格和换行，可以利用它们对代码进行格式化
    5.JS中每条语句应该以分号结尾。
          如果不写浏览器有自动的添加机制，但是它有极小的几率会加错

- 字面量和变量
    - 字面量就是一个值，在JS中可以直接使用字面量：
        1、2、345、'hello'、true、null...
    - 变量可以用来存储字面量，并且变量中存储的字面量可以任意的修改
        开发中，通常不会直接使用字面量，而是通过变量来存储字面量

- 变量的使用：
    1.变量的声明：
        let 变量名;
        let 变量名, 变量名, 变量名;
        var 变量名; (兼容老版本的浏览器)

    2.变量的赋值
        变量 = 值;

    3. 声明和赋值同时进行 *****
        let 变量 = 值;
        let 变量 = 值, 变量 = 值;
        var 变量 = 值;

- 标识符
    - 在JS中所有可以自主命名的内容都可以认为是一个标识符
    - 标识符必须要遵循如下的规范：
        1.标识符中可以含有字母、数字、_、$，但是不能以数字开头。
        2.标识符不能是JS中的关键字和保留字，也不建议使用内置函数名（变量名）来作为变量使用。
        3.标识符采用驼峰命名法：
            - 首字母小写，每个单词开头大写，其余字母都小写
                xxxyyy --> xxxYyy
            - 大驼峰，首字母大写，每个单词开头大写，其余字母都小写
                xxxyyy --> XxxYyy

- 数据类型
    字符串（string）
        - 字符串需要使用引号引起来，单双引号都可以
        - 同类型的引号之间不能嵌套
        - 转义字符串，使用 \ 作为转义字符
            \' --> '
            \" --> "
            \\ --> \
            \n --> 换行
            \t --> 制表符
        - 使用typeof检查一个字符串时，返回 "string"

        - 模板字符串（新特性）
            - 模板字符串使用返单引号`
            - 模板字符串可以跨行
            - 在模板字符串中可以使用变量
                ${变量}

    数值（number）
        - 在JS中所有的数字包括整数和浮点数都是number类型
        - 在JS中大部分整数运算都可以确保精确，但是不要太大了
        - 在JS中小数运算可能会得到一个不精确的结果，不要进行精度要求较高的运算
        - 特殊的数字：
            Infinity 无穷
            NaN      非数字
        - 其他进制数字的表示方法：
            二进制 0b
            八进制 0o
            十六进制 0x
        - 使用typeof检查一个数字时，会返回 'number'

        - 大整数（bigint）
            - ES2020新增的特性，用来表示一些大的整数
            - 大整数以n结尾，大整数只能和大整数运算
            - 使用typeof检查一个大整数时，会返回 'bigint'

    布尔值（boolean）
        - 布尔值用来进行逻辑运算
        - 布尔值只有两个：
            真 --> true
            假 --> false
        - 使用typeof检查一个布尔值时，会返回 'boolean'

    空值（null）
        - 空值用来表示空的对象
        - 只有一个值 null
        - 使用typeof检查null时，会返回 'object'

    未定义（undefined）
        - 未定义表示没有赋值的变量（属性）
        - 只有一个值 undefined
        - 使用typeof检查undefined时，会返回 'undefined'


