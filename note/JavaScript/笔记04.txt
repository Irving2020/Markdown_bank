do-while语句
    - 语法：
        do{
            语句...
        }while(条件表达式)

    - 执行流程：
        do-while语句在执行时，先执行do后的循环体，
            执行完毕，对while后的条件表达式进行求值判断
            如果为true，则继续执行循环体，以此类推
            如果为false，则循环结束

    - do-while语句，可以确保循环至少执行一次。

for循环 *****
    - 语法：
        for(①初始化表达式; ②条件表达式; ④更新表达式){
            ③语句...
        }

    - 执行流程：
        ① 执行初始化表达式对变量进行初始化
        ② 执行条件表达式来进行求值判断
            如果为false，则语句直接结束
        ③ 如果为true，则执行循环体
        ④ 执行更新表达式
        ⑤ 重复②

死循环：
    - 条件表达式恒为true就是死循环
        while(true){}
        for(;;){}

break和continue
    - break可以用来结束离他最近的循环或switch语句
    - continue用来跳过离他最近的循环

对象（Object）
    - 对象是一种复合数据类型，它相当于是一个容器
        在对象可以存储不同类型的值
    - 对象中所存储的值被称为属性
    - 使用typeof检查一个对象时，会返回 'object'
    - 对象的使用：
        - 创建对象
        - 语法：
            let obj = new Object();
            let obj = Object();

        - 向对象中添加属性：
            - 语法：对象.属性名 = 属性值
            - 例子：
                obj.name = '孙悟空';
                obj.age = 18;

        - 读取对象中的属性
            - 语法：对象.属性名
            - 例子：
                obj.name
            - 注意：如果读取的属性在对象中不存在，不会报错而是返回undefined

        - 删除对象中的属性
            - 语法：delete 对象.属性名

        - in运算符
            - 检查对象中是否含有某个属性
            - 语法：'属性名' in 对象
